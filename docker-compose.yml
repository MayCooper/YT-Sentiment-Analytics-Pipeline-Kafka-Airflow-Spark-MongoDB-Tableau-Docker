services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    deploy:
      resources:
        limits:
          memory: 1g
    networks:
      - kafka-net

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://127.0.0.1:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - kafka-net

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    deploy:
      resources:
        limits:
          memory: 2g
    networks:
      - kafka-net

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - ./airflow_dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    deploy:
      resources:
        limits:
          memory: 1g
    networks:
      - kafka-net

  airflow-init:
    build: .
    image: custom_airflow:latest
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
      AIRFLOW__CORE__LOAD_EXAMPLES: ${AIRFLOW__CORE__LOAD_EXAMPLES}
      AIRFLOW__API__AUTH_BACKENDS: airflow.api.auth.backend.session
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
      AIRFLOW__WEBSERVER__BASE_URL: http://localhost:8081
    volumes:
      - ./airflow_dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    env_file:
      - .env
    deploy:
      resources:
        limits:
          memory: 1g
    networks:
      - kafka-net

  airflow-webserver:
    build: .
    image: custom_airflow:latest
    depends_on:
      - airflow-init
      - postgres
      - kafka
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
      AIRFLOW__CORE__LOAD_EXAMPLES: ${AIRFLOW__CORE__LOAD_EXAMPLES}
      AIRFLOW__API__AUTH_BACKENDS: airflow.api.auth.backend.session
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
      AIRFLOW__WEBSERVER__BASE_URL: http://localhost:8081
      AIRFLOW__WEBSERVER__WORKER_TIMEOUT: 300
    ports:
      - "8081:8080"
    volumes:
      - ./airflow_dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./kafka_scripts:/opt/airflow/dags/kafka_scripts  # Ensure this path is correct
    env_file:
      - .env
    command: webserver
    deploy:
      resources:
        limits:
          memory: 2g
    networks:
      - kafka-net

  airflow-scheduler:
    build: .
    image: custom_airflow:latest
    depends_on:
      - airflow-init
      - postgres
      - kafka
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
      AIRFLOW__CORE__LOAD_EXAMPLES: ${AIRFLOW__CORE__LOAD_EXAMPLES}
      AIRFLOW__API__AUTH_BACKENDS: airflow.api.auth.backend.session
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
      AIRFLOW__WEBSERVER__BASE_URL: http://localhost:8081
    volumes:
      - ./airflow_dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    env_file:
      - .env
    command: scheduler
    deploy:
      resources:
        limits:
          memory: 2g
    networks:
      - kafka-net

  airflow-worker:
    build: .
    image: custom_airflow:latest
    depends_on:
      - airflow-init
      - postgres
      - kafka
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
      AIRFLOW__CORE__LOAD_EXAMPLES: ${AIRFLOW__CORE__LOAD_EXAMPLES}
      AIRFLOW__API__AUTH_BACKENDS: airflow.api.auth.backend.session
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
      AIRFLOW__WEBSERVER__BASE_URL: http://localhost:8081
    volumes:
      - ./airflow_dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    env_file:
      - .env
    command: worker
    deploy:
      resources:
        limits:
          memory: 2g
    networks:
      - kafka-net

  flask_api:
    build:
      context: .
      dockerfile: Dockerfile.flask
    ports:
      - "5000:5000"
    env_file:
      - .env
    deploy:
      resources:
        limits:
          memory: 1g
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge
